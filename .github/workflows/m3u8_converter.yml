name: M3U8_Creator

on:
  workflow_dispatch:
  # Run 6 Hours after https://github.com/bitsbb01/iptvcat-scrapper
  # 12.10 UTC Time, 06.10 Central Time
  # Changed to every 3hrs, due to including Youtube links and Pluto, so those links are always correct.
  schedule:
    - cron: "0 0/3 * * *"
  push:
    branches:
    - master
    - main

jobs:

  Running_M3U8_Creator:
    name: Running M3U8 Creator
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v2

      - name: Last Attempts
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          echo $(date) >> last_attempt.txt
          cat last_attempt.txt
          ls -ltr
          git status
          git add last_attempt.txt
          git status
          git commit -m "cron: setting last attempt time stamp" -a
          git status
#          git push
          
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Check *.M3u8 File existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "./CompiledallStreams.m3u, ./epg/epg_ripper_ALL_SOURCES1.xml.gz"

      - uses: actions/checkout@v2
      - name: If *.M3U8 Files exists - Then Cleanup
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git rm ./tests/m3u8/*.m3u8
          git rm ./m3u8/*.m3u8
          git rm ./*.m3u8
          git rm ./tests/epg/*.gz
          git rm ./epg/*.gz
          git rm ./temp/m3u8_static/*.m3u8
          git rm ./temp/all_streams_tmp/*.json
          git status
          git push          
          git commit -m "cron: Updated by Bot" -a
         
#      - name: If *.M3U8 Files exists - Then Cleanup 2
#        if: steps.check_files.outputs.files_exists == 'true'
#        # Only runs if all of the files exists
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.scrapper_token }}
#          branch: ${{ github.ref }}
#        
#      - name: If *.M3U8 Files exists - Then Cleanup 3
#        if: steps.check_files.outputs.files_exists == 'true'
#        # Only runs if all of the files exists
#        uses: zwaldowski/git-commit-action@v1
#        with:
#             commit_message: Updated by Bot - ${{ steps.date.outputs.date }}
#             working_directory: .
        
      ### SETUP THE ENVIRONMENT
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Setup Environment
        # e.g. create work dirst, store in env variables ... https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions
        run: |
          echo "IPTVCAT_DATE=$(date '+%Y-%m-%d')" >> $GITHUB_ENV
          echo "IPTVCAT_DATE_YESTERDAY=$(date -d "yesterday 7:00" '+%Y-%m-%d')" >> $GITHUB_ENV
          echo "IPTVCAT_DOWNLOAD_DIR=./temp/iptvcat" >> $GITHUB_ENV
          echo "M3U8_DIR=./tests/m3u8/" >> $GITHUB_ENV
          echo "EPG_TEMP_DIR=./tests/epg/" >> $GITHUB_ENV
          echo "M3U8_STATIC_DIR=./temp/m3u8_static/" >> $GITHUB_ENV
          echo "M3U8_STATIC_DIR2=./temp/m3u8_static/all/" >> $GITHUB_ENV
          # Update pythonpath used for our scripts
          echo "PYTHONPATH=$PYTHONPATH:${{ github.workspace }}" >> $GITHUB_ENV
      - name: Setup Dirs
        run: |
          echo "IPTVCAT_DATE: '${IPTVCAT_DATE}'"
          echo "IPTVCAT_DATE_YESTERDAY: '${IPTVCAT_DATE_YESTERDAY}'"
          echo "IPTVCAT_DOWNLOAD_DIR: '${IPTVCAT_DOWNLOAD_DIR}'"
          echo "M3U8_DIR: '${M3U8_DIR}'"
          echo "EPG_TEMP_DIR: '${EPG_TEMP_DIR}'"
          echo "M3U8_STATIC_DIR: '${M3U8_STATIC_DIR}'"
          echo "Command: 'mkdir -p ${IPTVCAT_DOWNLOAD_DIR}'"
          mkdir -p ${IPTVCAT_DOWNLOAD_DIR}
          echo "Command: 'mkdir -p ${M3U8_DIR}'"
          mkdir -p ${M3U8_DIR}
          echo "Command: 'mkdir -p ${EPG_TEMP_DIR}'"
          mkdir -p ${EPG_TEMP_DIR}
          echo "Command: 'mkdir -p ${M3U8_STATIC_DIR2}'"
          mkdir -p ${M3U8_STATIC_DIR2}
          echo "Command: 'mkdir -p ${M3U8_STATIC_DIR}'"
          mkdir -p ${M3U8_STATIC_DIR}
          echo "Command: 'ls -alt ${IPTVCAT_DOWNLOAD_DIR}'"
          ls -alt ${IPTVCAT_DOWNLOAD_DIR}
          echo "Command: 'ls -alt ${M3U8_DIR}'"
          ls -alt ${M3U8_DIR}
          echo "Command: 'ls -alt ${EPG_TEMP_DIR}'"
          ls -alt ${EPG_TEMP_DIR}
          echo "Command: 'ls -alt ${M3U8_STATIC_DIR}'"
          ls -alt ${M3U8_STATIC_DIR}
          echo "Command: 'ls -alt ${M3U8_STATIC_DIR2}'"
          ls -alt ${M3U8_STATIC_DIR2}
          
      - name: Get other m3u8s to add
        run: |
        
          echo "Command: './scripts/download_file_allow_failiure.sh "https://iptv-org.github.io/iptv/languages/eng.m3u" "${M3U8_STATIC_DIR}" "eng.m3u8"'"
          ./scripts/download_file_allow_failiure.sh "https://iptv-org.github.io/iptv/languages/eng.m3u" "${M3U8_STATIC_DIR}" "eng.m3u8"
          
          echo "Command: './scripts/download_file_allow_failiure.sh "https://iptv-org.github.io/iptv/languages/undefined.m3u" "${M3U8_STATIC_DIR}" "undefined.m3u8"'"
          ./scripts/download_file_allow_failiure.sh "https://iptv-org.github.io/iptv/languages/undefined.m3u" "${M3U8_STATIC_DIR}" "undefined.m3u8"
		  
      - name: Match EPG IDs to Static Files
        run: |
          echo "Command: './scripts/match_epgid_to_names.sh "${M3U8_STATIC_DIR}" "${M3U8_STATIC_DIR}"'"
          ./scripts/match_epgid_to_names.sh "${M3U8_STATIC_DIR}" "${M3U8_STATIC_DIR}"          
          
          ls -alt "${M3U8_STATIC_DIR}"        
 
      - name: Merge Files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          cat ./temp/m3u8_static/*.m3u8 > ./temp/m3u8_static/all/all-streams.m3u8       
          
          ls -alt "${M3U8_STATIC_DIR2}"        
               
          
      - name: Add EPG URL to files
        run: |
          echo "Command: 'python ./scripts/add_epg_url_into_m3u8.py --epg_url "https://github.com/bitsbb01/m3u8_creator/raw/main/epg/epg_ripper_ALL_SOURCES1.xml.gz" --m3u8_in_dir "${M3U8_DIR}" --m3u8_out_dir "${M3U8_DIR}"'"
          python ./scripts/add_epg_url_into_m3u8.py --epg_url "https://github.com/bitsbb01/m3u8_creator/raw/main/epg/epg_ripper_ALL_SOURCES1.xml.gz" --m3u8_in_dir "${M3U8_DIR}" --m3u8_out_dir "${M3U8_DIR}"
      - name: Add Channel To Main Categories
        run: |
          echo "Command: 'python ./scripts/import_categories_into_m3u8.py --category_file "./ez_m3u8_creator/categories/main.json" --m3u8_in_dir "${M3U8_DIR}" --m3u8_out_dir "${M3U8_DIR}"'"
          python ./scripts/import_categories_into_m3u8.py --category_file "./ez_m3u8_creator/categories/main.json" --m3u8_in_dir "${M3U8_DIR}" --m3u8_out_dir "${M3U8_DIR}"
 
      - name: Match EPG IDs
        run: |
          echo "Command: './scripts/match_epgid_to_names.sh "${M3U8_DIR}" "${M3U8_DIR}"'"
          ./scripts/match_epgid_to_names.sh "${M3U8_DIR}" "${M3U8_DIR}"
                           
      - name: Push all changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.scrapper_token }}
          branch: ${{ github.ref }} 
             
      - name: Copy Static m3u8s
        uses: canastro/copy-file-action@master
        with:
          source: "./temp/m3u8_static/*.m3u8"
          target: "./m3u8"
          flags: '-r'
          
      ### This is where the copy function should work, to copy the m3u8 & epg to the data folder ###
      - name: Copy m3u8
        uses: canastro/copy-file-action@master
        with:
          source: "./tests/m3u8/*.m3u8"
          target: "./m3u8"
          flags: '-r'
          
                  
          
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date '+%Y-%m-%d')"


      - name: Merge Files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          ls -1 ./m3u8/*.m3u8 > ./allstreams.txt
          cat ./m3u8/*.m3u8 > ./Compiled-all-Streams.m3u8
          cat ./m3u8/*.m3u8 > ./CompiledallStreams.m3u
                                    
      - name: create workflow artifact #this is created, so if theres an error, you can look back at previous yml
        uses: actions/upload-artifact@v2
        with:
         name: workflow_${{ steps.date.outputs.date }}
         path: .github/workflows/m3u8_converter.yml
       
       
                           
      - name: Push all changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.scrapper_token }}
          branch: ${{ github.ref }} 
          
      - name: Commit All Files
        uses: zwaldowski/git-commit-action@v1
        with:
             commit_message: Updated by Bot - ${{ steps.date.outputs.date }}
             working_directory: .

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.scrapper_token }}
          branch: ${{ github.ref }}
          
